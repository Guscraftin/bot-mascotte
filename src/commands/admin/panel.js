const { ActionRowBuilder, EmbedBuilder, PermissionFlagsBits, SlashCommandBuilder, StringSelectMenuBuilder } = require('discord.js');
const { 
    channel_announce, channel_idea_poll, channel_agenda, channel_absence, color_basic,
    role_mail, role_idea_poll, role_agenda, role_absence
} = require(process.env.CONSTANT);

module.exports = {
    data: new SlashCommandBuilder()
        .setName('panel')
        .setDescription('üîß Deployer un panel.')
        .setDefaultMemberPermissions(PermissionFlagsBits.Administrator)
        .setDMPermission(false)
        .addStringOption(option =>
            option.setName('name').setDescription('üîß Deployer un panel.').addChoices(
                { name: 'Tickets', value: 'tickets' },
                { name: 'R√¥le r√©action', value: 'role_reaction' },
            ).setRequired(true)),
    async execute(interaction) {
        const name = interaction.options.getString('name');

        await interaction.deferReply({ ephemeral: true });

        let embed, selectRow;
        switch (name) {

            /**
             * Create embed and select menu for the ticket panel
             */
            case 'tickets':
                embed = new EmbedBuilder()
                    .setDescription(`# \`üì©\` - Ouvrir un ticket
Gr√¢ce √† ce panel, vous pouvez **ouvrir un ticket destin√© aux admins ou aux d√©l√©gu√©s**. Pour cela, il vous suffit de cliquer sur l'option correspondante. Une fois cela fait, un nouveau salon sera cr√©√© o√π vous pourrez discuter avec les admins ou les d√©l√©gu√©s.
### Voici une liste non exhaustive des raisons pour lesquelles vous pouvez ouvrir un ticket aux admins (\`üîß\`) :
- Demander des permissions suppl√©mentaires afin d'organiser un √©v√©nement.
- Signaler un probl√®me avec le bot du serveur.
### Voici une liste non exhaustive des raisons pour lesquelles vous pouvez ouvrir un ticket aux d√©l√©gu√©s (\`üíº\`) :
- Discuter d'un probl√®me rencontr√©, comme une surcharge de travail ou un probl√®me avec un professeur.
- Proposer des am√©liorations aupr√®s de l'administration.

PS : Pour plus d'informations, consultez <#1130459961315577926>.`)
                    .setColor(color_basic);

                selectRow = new ActionRowBuilder().addComponents(
                    new StringSelectMenuBuilder()
                        .setCustomId('panel_tickets')
                        .setPlaceholder('Ouvrir un ticket aux...')
                        .addOptions(
                            {
                                label: "üîß„Éª Admins",
                                description: "Ouvrir un ticket destin√© aux admins.",
                                value: "ticket_admins",
                            },
                            {
                                label: "üíº„Éª D√©l√©gu√©s",
                                description: "Ouvrir un ticket destin√© aux d√©l√©gu√©s.",
                                value: "ticket_delegues",
                            },
                            {
                                label: "‚ùå„Éª Annuler",
                                description: "Annuler la s√©lection.",
                                value: "ticket_exit",
                            },
                        ),
                );


            /**
             * Create embed and select menu for the role reaction panel
             */
            case 'role_reaction':
                embed = new EmbedBuilder()
                    .setDescription(`# \`üî∞\` - R√¥le r√©action
Souhaitez-vous √™tre notifi√© des messages que vous jugez importants, tels que les annonces, les id√©es et les sondages, l'agenda ou encore le contenu des cours pass√©s ? Gr√¢ce √† ce panneau de contr√¥le, vous avez la possibilit√© de s√©lectionner les notifications que vous d√©sirez recevoir. 
### Alors, quelles notifications aimeriez-vous recevoir ?
> üì© : Mail *[<#${channel_announce}>]*
> üìä : Id√©es et Sondages *[<#${channel_idea_poll}>]*
> üìÖ : Agenda *[<#${channel_agenda}>]*
> ü§í : Contenu des cours passs√©s *[<#${channel_absence}>]*
> üö® : Helper (Aide les personnes) *[Dans la cat√©gorie cours]*`)
                    .setColor(color_basic);

                selectRow = new ActionRowBuilder().addComponents(
                    new StringSelectMenuBuilder()
                        .setCustomId('panel_role_reaction')
                        .setPlaceholder('S√©lectionnez un r√¥le ou plusieurs r√¥les...')
                        .addOptions(
                            {
                                label: "üì©„Éª Mail",
                                description: "Recevoir des notifications pour les nouveaux mails.",
                                value: `${role_mail}`,
                            },
                            {
                                label: "üìä„Éª Id√©es et Sondages",
                                description: "Recevoir des notifications pour les id√©es et les sondages.",
                                value: `${role_idea_poll}`,
                            },
                            {
                                label: "üìÖ„Éª Agenda",
                                description: "Recevoir une notification en cas de mise √† jour de l'agenda.",
                                value: `${role_agenda}`,
                            },
                            {
                                label: "ü§í„Éª Contenu des cours passs√©s",
                                description: "Recevoir une notification lors de l'ajout de cours pass√©s.",
                                value: `${role_absence}`,
                            },
                            {
                                label: "‚ùå„Éª Retirer tous les r√¥les",
                                description: "Retirer tous les r√¥les notifications.",
                                value: "role_reaction_remove_all",
                            },
                        )
                        .setMinValues(1)
			            .setMaxValues(4),
                );
        }

        // Send embed and select menu
        const msg = await interaction.channel.send({ embeds: [embed], components: [selectRow] });
        await msg.pin();
        await interaction.channel.lastMessage.delete();

        return interaction.editReply({ content: `Le panel nomm√© \`${name}\` a bien √©t√© d√©ploy√© dans ce salon.`, ephemeral: true });
    },
};
